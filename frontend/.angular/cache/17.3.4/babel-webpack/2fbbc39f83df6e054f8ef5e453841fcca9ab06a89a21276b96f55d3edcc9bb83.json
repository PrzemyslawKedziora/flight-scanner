{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { ReactiveFormsModule, Validators } from \"@angular/forms\";\nimport { MatFormField, MatFormFieldModule, MatLabel } from \"@angular/material/form-field\";\nimport { MatInput } from \"@angular/material/input\";\nimport { MatDatepicker, MatDatepickerInput, MatDatepickerToggle } from \"@angular/material/datepicker\";\nimport { MatNativeDateModule } from \"@angular/material/core\";\nimport { provideMomentDateAdapter } from \"@angular/material-moment-adapter\";\nimport * as moment from 'moment';\nimport { MatButton } from \"@angular/material/button\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/flight/flight.service\";\nimport * as i3 from \"@angular/material/form-field\";\nfunction BrowserFormComponent_Conditional_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BrowserFormComponent_Conditional_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BrowserFormComponent_Conditional_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BrowserFormComponent_Conditional_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BrowserFormComponent_Conditional_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Minimal number of passengers is 1.\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'yyyy-MM-dd'\n  },\n  display: {\n    dateInput: 'yyyy-MM-DD',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY'\n  }\n};\nexport class BrowserFormComponent {\n  constructor(fb, fs) {\n    this.fb = fb;\n    this.fs = fs;\n    this.flightsSender = new EventEmitter();\n    this.locationsSender = new EventEmitter();\n    this.submitStatus = new EventEmitter();\n    this.locations = [];\n    this.minDate = new Date();\n    this.minReturnDate = new Date();\n    this.flightForm = this.fb.group({\n      origin: ['', Validators.required],\n      destination: ['', Validators.required],\n      adults: [1, [Validators.required, Validators.min(1), Validators.max(10)]],\n      dateOfDeparture: [this.minDate, Validators.required],\n      dateOfReturn: ''\n    }, {\n      validators: this.dateOfReturnValidator\n    });\n  }\n  onSubmit(formDirective) {\n    const originValue = this.flightForm.get('origin').value;\n    const destination = this.flightForm.get('destination').value;\n    this.setFormattedData('dateOfDeparture');\n    // this.setFormattedData('dateOfReturn');\n    console.log(this.flightForm.valid);\n    this.flightForm.valid ? this.submitStatus.emit(true) : this.submitStatus.emit(false);\n    console.log(this.flightForm.value);\n    if (originValue && destination) {\n      this.locations[0] = originValue;\n      this.locations[1] = destination;\n      this.locationsSender.emit(this.locations);\n      this.fs.searchCodeForCity(originValue).subscribe(res => {\n        this.flightForm.get('origin')?.setValue(res.data[0].address.cityCode);\n        console.log(this.flightForm.get('origin')?.value);\n        this.fs.searchCodeForCity(destination).subscribe(res => {\n          this.flightForm.get('destination')?.setValue(res.data[0].address.cityCode);\n          console.log(this.flightForm.get('destination')?.value);\n          this.fs.showAvailableFlights(this.flightForm).subscribe(res => {\n            this.availableFlights = res.data;\n            console.log(res);\n            console.log(this.availableFlights);\n            this.flightsSender.emit(this.availableFlights);\n            this.flightForm.reset({}, {\n              emitEvent: false\n            });\n            formDirective.resetForm();\n          });\n        });\n      });\n    }\n  }\n  onSetDepartureDate() {\n    const minDate = new Date(moment(this.flightForm.get('dateOfDeparture').value).format('YYYY-MM-DD'));\n    this.minReturnDate = new Date(minDate.setDate(minDate.getDate()));\n  }\n  setFormattedData(selector) {\n    const date = moment(this.flightForm.get(selector).value);\n    const formattedDate = date.format('YYYY-MM-DD');\n    return this.flightForm.get(selector)?.setValue(formattedDate);\n  }\n  dateOfReturnValidator(form) {\n    const dateOfReturnControl = form.get('dateOfReturn');\n    const dateOfReturnValue = dateOfReturnControl?.value;\n    // Sprawdź, czy wartość pola dateOfReturn nie jest domyślną wartością 'Invalid date'\n    if (dateOfReturnValue && dateOfReturnValue !== 'Invalid date') {\n      // Jeśli pole nie ma domyślnej wartości 'Invalid date', sprawdź, czy jest to prawidłowa data\n      const isDateValid = !isNaN(Date.parse(dateOfReturnValue));\n      return isDateValid ? null : {\n        invalidDate: true\n      };\n    } else {\n      // Jeśli pole ma domyślną wartość 'Invalid date', nie stosuj walidacji\n      return null;\n    }\n  }\n  static #_ = this.ɵfac = function BrowserFormComponent_Factory(t) {\n    return new (t || BrowserFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.FlightService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BrowserFormComponent,\n    selectors: [[\"app-browser-form\"]],\n    outputs: {\n      flightsSender: \"flightsSender\",\n      locationsSender: \"locationsSender\",\n      submitStatus: \"submitStatus\"\n    },\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([provideMomentDateAdapter(MY_FORMATS)]), i0.ɵɵStandaloneFeature],\n    decls: 38,\n    vars: 12,\n    consts: [[\"formDirective\", \"ngForm\"], [\"departurePicker\", \"\"], [\"returnPicker\", \"\"], [1, \"container\"], [3, \"submit\", \"formGroup\"], [1, \"example-full-width\"], [\"matInput\", \"\", \"formControlName\", \"origin\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"destination\"], [\"matInput\", \"\", \"formControlName\", \"dateOfDeparture\", 3, \"dateChange\", \"matDatepicker\", \"min\"], [\"matIconSuffix\", \"\", 3, \"for\"], [\"matInput\", \"\", \"formControlName\", \"dateOfReturn\", 3, \"matDatepicker\", \"min\"], [\"matInput\", \"\", \"formControlName\", \"adults\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"]],\n    template: function BrowserFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 3)(1, \"h1\");\n        i0.ɵɵtext(2, \"Flight Browser\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 4, 0);\n        i0.ɵɵlistener(\"submit\", function BrowserFormComponent_Template_form_submit_3_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const formDirective_r2 = i0.ɵɵreference(4);\n          return i0.ɵɵresetView(ctx.onSubmit(formDirective_r2));\n        });\n        i0.ɵɵelementStart(5, \"mat-form-field\", 5)(6, \"mat-label\");\n        i0.ɵɵtext(7, \"City of departure\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵtemplate(9, BrowserFormComponent_Conditional_9_Template, 2, 0, \"mat-error\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-form-field\")(11, \"mat-label\");\n        i0.ɵɵtext(12, \"City of arrival\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 7);\n        i0.ɵɵtemplate(14, BrowserFormComponent_Conditional_14_Template, 2, 0, \"mat-error\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mat-form-field\")(16, \"mat-label\");\n        i0.ɵɵtext(17, \"Departure Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"input\", 8);\n        i0.ɵɵlistener(\"dateChange\", function BrowserFormComponent_Template_input_dateChange_18_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onSetDepartureDate());\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, BrowserFormComponent_Conditional_19_Template, 2, 0, \"mat-error\");\n        i0.ɵɵelement(20, \"mat-datepicker-toggle\", 9)(21, \"mat-datepicker\", null, 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"mat-form-field\")(24, \"mat-label\");\n        i0.ɵɵtext(25, \"Date of return\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 10)(27, \"mat-datepicker-toggle\", 9)(28, \"mat-datepicker\", null, 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"mat-form-field\")(31, \"mat-label\");\n        i0.ɵɵtext(32, \"Number of passengers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"input\", 11);\n        i0.ɵɵtemplate(34, BrowserFormComponent_Conditional_34_Template, 2, 0, \"mat-error\")(35, BrowserFormComponent_Conditional_35_Template, 2, 0, \"mat-error\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"button\", 12);\n        i0.ɵɵtext(37, \"Search flight!\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        let tmp_4_0;\n        let tmp_5_0;\n        let tmp_8_0;\n        let tmp_13_0;\n        let tmp_14_0;\n        const departurePicker_r3 = i0.ɵɵreference(22);\n        const returnPicker_r4 = i0.ɵɵreference(29);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.flightForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵconditional(9, ((tmp_4_0 = ctx.flightForm.get(\"origin\")) == null ? null : tmp_4_0.errors == null ? null : tmp_4_0.errors[\"required\"]) ? 9 : -1);\n        i0.ɵɵadvance(5);\n        i0.ɵɵconditional(14, ((tmp_5_0 = ctx.flightForm.get(\"destination\")) == null ? null : tmp_5_0.errors == null ? null : tmp_5_0.errors[\"required\"]) ? 14 : -1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"matDatepicker\", departurePicker_r3)(\"min\", ctx.minDate);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(19, ((tmp_8_0 = ctx.flightForm.get(\"dateOfDeparture\")) == null ? null : tmp_8_0.errors == null ? null : tmp_8_0.errors[\"required\"]) ? 19 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"for\", departurePicker_r3);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"matDatepicker\", returnPicker_r4)(\"min\", ctx.minReturnDate);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"for\", returnPicker_r4);\n        i0.ɵɵadvance(7);\n        i0.ɵɵconditional(34, ((tmp_13_0 = ctx.flightForm.get(\"adults\")) == null ? null : tmp_13_0.errors == null ? null : tmp_13_0.errors[\"required\"]) ? 34 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(35, ((tmp_14_0 = ctx.flightForm.get(\"adults\")) == null ? null : tmp_14_0.errors == null ? null : tmp_14_0.errors[\"min\"]) ? 35 : -1);\n      }\n    },\n    dependencies: [ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, MatLabel, MatFormField, MatInput, MatDatepicker, MatFormFieldModule, i3.MatError, i3.MatSuffix, MatDatepickerInput, MatNativeDateModule, MatDatepickerToggle, MatButton],\n    styles: [\".container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  row-gap: 10vh;\\n  align-items: center;\\n}\\n\\nform[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-wrap: wrap;\\n}\\n\\nmat-form-field[_ngcontent-%COMP%] {\\n  min-height: 2.5rem;\\n  display: flex;\\n  justify-content: space-between;\\n  width: 13rem;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  min-height: 3.5rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9icm93c2VyLWZvcm0vYnJvd3Nlci1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0FBQ0Y7O0FBQ0E7RUFDRSxhQUFBO0VBQ0EsZUFBQTtBQUVGOztBQUNBO0VBQ0Usa0JBQUE7RUFDQSxhQUFBO0VBQ0EsOEJBQUE7RUFDQSxZQUFBO0FBRUY7O0FBQUE7RUFDRSxrQkFBQTtBQUdGIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lcntcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgcm93LWdhcDogMTB2aDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbmZvcm17XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgLy9nYXA6IDFyZW07XHJcbn1cclxubWF0LWZvcm0tZmllbGR7XHJcbiAgbWluLWhlaWdodDogMi41cmVtO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIHdpZHRoOiAxM3JlbTtcclxufVxyXG5idXR0b257XHJcbiAgbWluLWhlaWdodDogMy41cmVtO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","ReactiveFormsModule","Validators","MatFormField","MatFormFieldModule","MatLabel","MatInput","MatDatepicker","MatDatepickerInput","MatDatepickerToggle","MatNativeDateModule","provideMomentDateAdapter","moment","MatButton","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","MY_FORMATS","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","BrowserFormComponent","constructor","fb","fs","flightsSender","locationsSender","submitStatus","locations","minDate","Date","minReturnDate","flightForm","group","origin","required","destination","adults","min","max","dateOfDeparture","dateOfReturn","validators","dateOfReturnValidator","onSubmit","formDirective","originValue","get","value","setFormattedData","console","log","valid","emit","searchCodeForCity","subscribe","res","setValue","data","address","cityCode","showAvailableFlights","availableFlights","reset","emitEvent","resetForm","onSetDepartureDate","format","setDate","getDate","selector","date","formattedDate","form","dateOfReturnControl","dateOfReturnValue","isDateValid","isNaN","invalidDate","_","ɵɵdirectiveInject","i1","FormBuilder","i2","FlightService","_2","selectors","outputs","standalone","features","ɵɵProvidersFeature","ɵɵStandaloneFeature","decls","vars","consts","template","BrowserFormComponent_Template","rf","ctx","ɵɵlistener","BrowserFormComponent_Template_form_submit_3_listener","ɵɵrestoreView","_r1","formDirective_r2","ɵɵreference","ɵɵresetView","ɵɵelement","ɵɵtemplate","BrowserFormComponent_Conditional_9_Template","BrowserFormComponent_Conditional_14_Template","BrowserFormComponent_Template_input_dateChange_18_listener","BrowserFormComponent_Conditional_19_Template","BrowserFormComponent_Conditional_34_Template","BrowserFormComponent_Conditional_35_Template","ɵɵadvance","ɵɵproperty","ɵɵconditional","tmp_4_0","errors","tmp_5_0","departurePicker_r3","tmp_8_0","returnPicker_r4","tmp_13_0","tmp_14_0","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","i3","MatError","MatSuffix","styles"],"sources":["D:\\Projekty\\lot-flight-browser\\frontend\\src\\app\\components\\browser-form\\browser-form.component.ts","D:\\Projekty\\lot-flight-browser\\frontend\\src\\app\\components\\browser-form\\browser-form.component.html"],"sourcesContent":["import {Component, EventEmitter, Output} from '@angular/core';\nimport {FormBuilder, FormGroup, ReactiveFormsModule, Validators} from \"@angular/forms\";\nimport {FlightService} from \"../../services/flight/flight.service\";\nimport {MatFormField, MatFormFieldModule, MatHint, MatLabel} from \"@angular/material/form-field\";\nimport {MatInput} from \"@angular/material/input\";\nimport {MatDatepicker, MatDatepickerInput, MatDatepickerToggle, MatStartDate} from \"@angular/material/datepicker\";\nimport {MatNativeDateModule} from \"@angular/material/core\";\nimport {provideMomentDateAdapter} from \"@angular/material-moment-adapter\";\nimport * as moment from 'moment';\nimport {MatButton} from \"@angular/material/button\";\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'yyyy-MM-dd',\n  },\n  display: {\n    dateInput: 'yyyy-MM-DD',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n@Component({\n  selector: 'app-browser-form',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    MatLabel,\n    MatFormField,\n    MatInput,\n    MatDatepicker,\n    MatFormFieldModule,\n    MatDatepickerInput,\n    MatNativeDateModule,\n    MatHint,\n    MatDatepickerToggle,\n    MatStartDate,\n    MatButton\n  ],\n  providers:[\n    provideMomentDateAdapter(MY_FORMATS)\n  ],\n  templateUrl: './browser-form.component.html',\n  styleUrls: ['./browser-form.component.scss']\n})\nexport class BrowserFormComponent {\n  @Output() flightsSender: EventEmitter<Array<any>> = new EventEmitter();\n  @Output() locationsSender: EventEmitter<string[]> = new EventEmitter();\n  @Output() submitStatus: EventEmitter<boolean> = new EventEmitter();\n  availableFlights!:Array<any>;\n  locations:string[] = [];\n  flightForm!: FormGroup;\n  minDate = new Date();\n  minReturnDate = new Date();\n  constructor(private fb: FormBuilder,\n              private fs: FlightService) {\n    this.flightForm = this.fb.group({\n      origin: ['', Validators.required],\n      destination: ['', Validators.required],\n      adults: [1, [Validators.required,Validators.min(1),Validators.max(10)]],\n      dateOfDeparture: [this.minDate, Validators.required],\n      dateOfReturn: '',\n    }, { validators: this.dateOfReturnValidator });\n  }\n\n  onSubmit(formDirective: { resetForm: () => void; }){\n    const originValue = this.flightForm.get('origin')!.value;\n    const destination = this.flightForm.get('destination')!.value;\n    this.setFormattedData('dateOfDeparture');\n    // this.setFormattedData('dateOfReturn');\n    console.log(this.flightForm.valid);\n    this.flightForm.valid ? this.submitStatus.emit(true) : this.submitStatus.emit(false);\n    console.log(this.flightForm.value);\n   if (originValue && destination){\n     this.locations[0] = originValue;\n     this.locations[1] = destination;\n     this.locationsSender.emit(this.locations);\n     this.fs.searchCodeForCity(originValue).subscribe((res: any)=>{\n       this.flightForm.get('origin')?.setValue(res.data[0].address.cityCode)\n       console.log(this.flightForm.get('origin')?.value);\n\n       this.fs.searchCodeForCity(destination).subscribe((res: any)=>{\n         this.flightForm.get('destination')?.setValue(res.data[0].address.cityCode)\n         console.log(this.flightForm.get('destination')?.value);\n\n         this.fs.showAvailableFlights(this.flightForm).subscribe((res: any)=>{\n           this.availableFlights = res.data;\n           console.log(res)\n           console.log(this.availableFlights);\n           this.flightsSender.emit(this.availableFlights);\n           this.flightForm.reset({},{emitEvent: false});\n           formDirective.resetForm();\n         })\n       });\n     });\n   }\n  }\n\n  onSetDepartureDate() {\n    const minDate = new Date(moment(this.flightForm.get('dateOfDeparture')!.value).format('YYYY-MM-DD'));\n    this.minReturnDate = new Date(minDate.setDate(minDate.getDate()));\n  }\n\n\n  private setFormattedData(selector:string) {\n    const date: moment.Moment = moment(this.flightForm.get(selector)!.value);\n    const formattedDate: string = date.format('YYYY-MM-DD');\n    return this.flightForm.get(selector)?.setValue(formattedDate);\n  }\n  dateOfReturnValidator(form: FormGroup) {\n    const dateOfReturnControl = form.get('dateOfReturn');\n    const dateOfReturnValue = dateOfReturnControl?.value;\n\n    // Sprawdź, czy wartość pola dateOfReturn nie jest domyślną wartością 'Invalid date'\n    if (dateOfReturnValue && dateOfReturnValue !== 'Invalid date') {\n      // Jeśli pole nie ma domyślnej wartości 'Invalid date', sprawdź, czy jest to prawidłowa data\n      const isDateValid = !isNaN(Date.parse(dateOfReturnValue));\n      return isDateValid ? null : { invalidDate: true };\n    } else {\n      // Jeśli pole ma domyślną wartość 'Invalid date', nie stosuj walidacji\n      return null;\n    }\n  }\n}\n","<div class=\"container\">\n    <h1>Flight Browser</h1>\n    <form #formDirective=\"ngForm\" [formGroup]=\"flightForm\" (submit)=\"onSubmit(formDirective)\">\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>City of departure</mat-label>\n        <input matInput formControlName=\"origin\" >\n        @if(flightForm.get('origin')?.errors?.['required']){\n          <mat-error>This field is mandatory</mat-error>\n        }\n      </mat-form-field>\n        <mat-form-field >\n            <mat-label>City of arrival</mat-label>\n            <input matInput type=\"text\" formControlName=\"destination\">\n          @if(flightForm.get('destination')?.errors?.['required']){\n            <mat-error>This field is mandatory</mat-error>\n          }\n        </mat-form-field>\n        <mat-form-field>\n            <mat-label>Departure Date</mat-label>\n          <input matInput [matDatepicker]=\"departurePicker\" formControlName=\"dateOfDeparture\" [min]=\"minDate\" (dateChange)=\"onSetDepartureDate()\">\n          @if(flightForm.get('dateOfDeparture')?.errors?.['required']){\n            <mat-error>This field is mandatory</mat-error>\n          }\n          <mat-datepicker-toggle matIconSuffix [for]=\"departurePicker\"></mat-datepicker-toggle>\n          <mat-datepicker #departurePicker></mat-datepicker>\n        </mat-form-field>\n      <mat-form-field>\n        <mat-label>Date of return</mat-label>\n        <input matInput [matDatepicker]=\"returnPicker\" formControlName=\"dateOfReturn\" [min]=\"minReturnDate\">\n        <mat-datepicker-toggle matIconSuffix [for]=\"returnPicker\"></mat-datepicker-toggle>\n        <mat-datepicker #returnPicker></mat-datepicker>\n      </mat-form-field>\n        <mat-form-field>\n            <mat-label>Number of passengers</mat-label>\n            <input matInput formControlName=\"adults\">\n          @if(flightForm.get('adults')?.errors?.['required']){\n            <mat-error>This field is mandatory</mat-error>\n          }\n          @if(flightForm.get('adults')?.errors?.['min']){\n            <mat-error>Minimal number of passengers is 1.</mat-error>\n          }\n        </mat-form-field>\n        <button mat-flat-button color=\"primary\" type=\"submit\">Search flight!</button>\n    </form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}