{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { ReactiveFormsModule, Validators } from \"@angular/forms\";\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule } from '@angular/forms';\nlet BrowserFormComponent = class BrowserFormComponent {\n  constructor(fb, fs) {\n    this.fb = fb;\n    this.fs = fs;\n    this.flightsSender = new EventEmitter();\n    this.locationsSender = new EventEmitter();\n    this.locations = [];\n    this.flightForm = this.fb.group({\n      origin: ['', Validators.required],\n      destination: ['', Validators.required],\n      adults: [0, Validators.required],\n      dateOfDeparture: ['', Validators.required],\n      dateOfReturn: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    const originValue = this.flightForm.get('origin').value;\n    const destination = this.flightForm.get('destination').value;\n    console.log(this.flightForm.value);\n    if (originValue && destination) {\n      this.locations[0] = originValue;\n      this.locations[1] = destination;\n      this.locationsSender.emit(this.locations);\n      this.fs.searchCodeForCity(originValue).subscribe(res => {\n        this.flightForm.get('origin')?.setValue(res.data[0].address.cityCode);\n        console.log(this.flightForm.get('origin')?.value);\n        this.fs.searchCodeForCity(destination).subscribe(res => {\n          this.flightForm.get('destination')?.setValue(res.data[0].address.cityCode);\n          console.log(this.flightForm.get('destination')?.value);\n          this.fs.showAvailableFlights(this.flightForm).subscribe(res => {\n            this.availableFlights = res.data;\n            console.log(res);\n            console.log(this.availableFlights);\n            this.flightsSender.emit(this.availableFlights);\n          });\n        });\n      });\n    }\n  }\n};\n__decorate([Output()], BrowserFormComponent.prototype, \"flightsSender\", void 0);\n__decorate([Output()], BrowserFormComponent.prototype, \"locationsSender\", void 0);\nBrowserFormComponent = __decorate([Component({\n  selector: 'app-browser-form',\n  standalone: true,\n  imports: [ReactiveFormsModule, MatFormFieldModule, MatInputModule, FormsModule],\n  templateUrl: './browser-form.component.html',\n  styleUrls: ['./browser-form.component.scss']\n})], BrowserFormComponent);\nexport { BrowserFormComponent };","map":{"version":3,"names":["Component","EventEmitter","Output","ReactiveFormsModule","Validators","MatInputModule","MatFormFieldModule","FormsModule","BrowserFormComponent","constructor","fb","fs","flightsSender","locationsSender","locations","flightForm","group","origin","required","destination","adults","dateOfDeparture","dateOfReturn","onSubmit","originValue","get","value","console","log","emit","searchCodeForCity","subscribe","res","setValue","data","address","cityCode","showAvailableFlights","availableFlights","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["D:\\Projekty\\lot-flight-browser\\frontend\\src\\app\\components\\browser-form\\browser-form.component.ts"],"sourcesContent":["import {Component, EventEmitter, Output} from '@angular/core';\nimport {FormBuilder, ReactiveFormsModule, Validators} from \"@angular/forms\";\nimport {FlightService} from \"../../services/flight/flight.service\";\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {FormsModule} from '@angular/forms';\n\n@Component({\n  selector: 'app-browser-form',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule\n  ],\n  templateUrl: './browser-form.component.html',\n  styleUrls: ['./browser-form.component.scss']\n})\nexport class BrowserFormComponent {\n  @Output() flightsSender: EventEmitter<Array<any>> = new EventEmitter();\n  @Output() locationsSender: EventEmitter<string[]> = new EventEmitter();\n  availableFlights!:Array<any>;\n  locations:string[] = [];\n  flightForm = this.fb.group({\n    origin: ['', Validators.required],\n    destination: ['', Validators.required],\n    adults: [0, Validators.required],\n    dateOfDeparture: ['', Validators.required],\n    dateOfReturn: ['', Validators.required],\n  });\n\n  constructor(private fb: FormBuilder,\n              private fs: FlightService) {\n  }\n\n  onSubmit(){\n    const originValue = this.flightForm.get('origin')!.value;\n    const destination = this.flightForm.get('destination')!.value;\n    console.log(this.flightForm.value)\n   if (originValue && destination){\n     this.locations[0] = originValue;\n     this.locations[1] = destination;\n     this.locationsSender.emit(this.locations);\n     this.fs.searchCodeForCity(originValue).subscribe((res: any)=>{\n       this.flightForm.get('origin')?.setValue(res.data[0].address.cityCode)\n       console.log(this.flightForm.get('origin')?.value);\n\n       this.fs.searchCodeForCity(destination).subscribe((res: any)=>{\n         this.flightForm.get('destination')?.setValue(res.data[0].address.cityCode)\n         console.log(this.flightForm.get('destination')?.value);\n\n         this.fs.showAvailableFlights(this.flightForm).subscribe((res: any)=>{\n           this.availableFlights = res.data;\n           console.log(res)\n           console.log(this.availableFlights);\n           this.flightsSender.emit(this.availableFlights);\n         })\n       });\n     });\n\n\n\n\n   }\n\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}