{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { ReactiveFormsModule, Validators } from \"@angular/forms\";\nimport { MatFormField, MatFormFieldModule, MatHint, MatLabel } from \"@angular/material/form-field\";\nimport { MatInput } from \"@angular/material/input\";\nimport { MatDatepicker, MatDatepickerInput, MatDatepickerToggle, MatStartDate } from \"@angular/material/datepicker\";\nimport { MatNativeDateModule } from \"@angular/material/core\";\nimport { provideMomentDateAdapter } from \"@angular/material-moment-adapter\";\nimport * as moment from 'moment';\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'yyyy-MM-dd'\n  },\n  display: {\n    dateInput: 'yyyy-MM-DD',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY'\n  }\n};\nlet BrowserFormComponent = class BrowserFormComponent {\n  constructor(fb, fs) {\n    this.fb = fb;\n    this.fs = fs;\n    this.flightsSender = new EventEmitter();\n    this.locationsSender = new EventEmitter();\n    this.locations = [];\n    this.minDate = new Date();\n    this.flightForm = this.fb.group({\n      origin: ['', Validators.required],\n      destination: ['', Validators.required],\n      adults: ['', Validators.required],\n      dateOfDeparture: ['', Validators.required],\n      dateOfReturn: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    const originValue = this.flightForm.get('origin').value;\n    const destination = this.flightForm.get('destination').value;\n    this.setFormattedData('dateOfDeparture');\n    this.setFormattedData('dateOfReturn');\n    console.log(this.flightForm.value);\n    if (originValue && destination) {\n      this.locations[0] = originValue;\n      this.locations[1] = destination;\n      this.locationsSender.emit(this.locations);\n      this.fs.searchCodeForCity(originValue).subscribe(res => {\n        this.flightForm.get('origin')?.setValue(res.data[0].address.cityCode);\n        console.log(this.flightForm.get('origin')?.value);\n        this.fs.searchCodeForCity(destination).subscribe(res => {\n          this.flightForm.get('destination')?.setValue(res.data[0].address.cityCode);\n          console.log(this.flightForm.get('destination')?.value);\n          this.fs.showAvailableFlights(this.flightForm).subscribe(res => {\n            this.availableFlights = res.data;\n            console.log(res);\n            console.log(this.availableFlights);\n            this.flightsSender.emit(this.availableFlights);\n          });\n        });\n      });\n    }\n  }\n  setFormattedData(selector) {\n    const date = moment(this.flightForm.get(selector).value);\n    const formattedDate = date.format('YYYY-MM-DD');\n    return this.flightForm.get(selector)?.setValue(formattedDate);\n  }\n};\n__decorate([Output()], BrowserFormComponent.prototype, \"flightsSender\", void 0);\n__decorate([Output()], BrowserFormComponent.prototype, \"locationsSender\", void 0);\nBrowserFormComponent = __decorate([Component({\n  selector: 'app-browser-form',\n  standalone: true,\n  imports: [ReactiveFormsModule, MatLabel, MatFormField, MatInput, MatDatepicker, MatFormFieldModule, MatDatepickerInput, MatNativeDateModule, MatHint, MatDatepickerToggle, MatStartDate],\n  providers: [provideMomentDateAdapter(MY_FORMATS)],\n  templateUrl: './browser-form.component.html',\n  styleUrls: ['./browser-form.component.scss']\n})], BrowserFormComponent);\nexport { BrowserFormComponent };","map":{"version":3,"names":["Component","EventEmitter","Output","ReactiveFormsModule","Validators","MatFormField","MatFormFieldModule","MatHint","MatLabel","MatInput","MatDatepicker","MatDatepickerInput","MatDatepickerToggle","MatStartDate","MatNativeDateModule","provideMomentDateAdapter","moment","MY_FORMATS","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","BrowserFormComponent","constructor","fb","fs","flightsSender","locationsSender","locations","minDate","Date","flightForm","group","origin","required","destination","adults","dateOfDeparture","dateOfReturn","onSubmit","originValue","get","value","setFormattedData","console","log","emit","searchCodeForCity","subscribe","res","setValue","data","address","cityCode","showAvailableFlights","availableFlights","selector","date","formattedDate","format","__decorate","standalone","imports","providers","templateUrl","styleUrls"],"sources":["D:\\Projekty\\lot-flight-browser\\frontend\\src\\app\\components\\browser-form\\browser-form.component.ts"],"sourcesContent":["import {Component, EventEmitter, Output} from '@angular/core';\nimport {FormBuilder, FormGroup, ReactiveFormsModule, Validators} from \"@angular/forms\";\nimport {FlightService} from \"../../services/flight/flight.service\";\nimport {MatFormField, MatFormFieldModule, MatHint, MatLabel} from \"@angular/material/form-field\";\nimport {MatInput} from \"@angular/material/input\";\nimport {MatDatepicker, MatDatepickerInput, MatDatepickerToggle, MatStartDate} from \"@angular/material/datepicker\";\nimport {MatNativeDateModule} from \"@angular/material/core\";\nimport {provideMomentDateAdapter} from \"@angular/material-moment-adapter\";\nimport * as moment from 'moment';\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'yyyy-MM-dd',\n  },\n  display: {\n    dateInput: 'yyyy-MM-DD',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n@Component({\n  selector: 'app-browser-form',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    MatLabel,\n    MatFormField,\n    MatInput,\n    MatDatepicker,\n    MatFormFieldModule,\n    MatDatepickerInput,\n    MatNativeDateModule,\n    MatHint,\n    MatDatepickerToggle,\n    MatStartDate\n  ],\n  providers:[\n    provideMomentDateAdapter(MY_FORMATS)\n  ],\n  templateUrl: './browser-form.component.html',\n  styleUrls: ['./browser-form.component.scss']\n})\nexport class BrowserFormComponent {\n  @Output() flightsSender: EventEmitter<Array<any>> = new EventEmitter();\n  @Output() locationsSender: EventEmitter<string[]> = new EventEmitter();\n  availableFlights!:Array<any>;\n  locations:string[] = [];\n  flightForm!: FormGroup;\n  minDate = new Date();\n\n  constructor(private fb: FormBuilder,\n              private fs: FlightService) {\n    this.flightForm = this.fb.group({\n      origin: ['', Validators.required],\n      destination: ['', Validators.required],\n      adults: ['', Validators.required],\n      dateOfDeparture: ['', Validators.required],\n      dateOfReturn: ['', Validators.required],\n    });\n  }\n\n  onSubmit(){\n    const originValue = this.flightForm.get('origin')!.value;\n    const destination = this.flightForm.get('destination')!.value;\n    this.setFormattedData('dateOfDeparture');\n    this.setFormattedData('dateOfReturn');\n    console.log(this.flightForm.value)\n   if (originValue && destination){\n     this.locations[0] = originValue;\n     this.locations[1] = destination;\n     this.locationsSender.emit(this.locations);\n     this.fs.searchCodeForCity(originValue).subscribe((res: any)=>{\n       this.flightForm.get('origin')?.setValue(res.data[0].address.cityCode)\n       console.log(this.flightForm.get('origin')?.value);\n\n       this.fs.searchCodeForCity(destination).subscribe((res: any)=>{\n         this.flightForm.get('destination')?.setValue(res.data[0].address.cityCode)\n         console.log(this.flightForm.get('destination')?.value);\n\n         this.fs.showAvailableFlights(this.flightForm).subscribe((res: any)=>{\n           this.availableFlights = res.data;\n           console.log(res)\n           console.log(this.availableFlights);\n           this.flightsSender.emit(this.availableFlights);\n         })\n       });\n     });\n   }\n  }\n\n  private setFormattedData(selector:string) {\n    const date: moment.Moment = moment(this.flightForm.get(selector)!.value);\n    const formattedDate: string = date.format('YYYY-MM-DD');\n    return this.flightForm.get(selector)?.setValue(formattedDate);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}