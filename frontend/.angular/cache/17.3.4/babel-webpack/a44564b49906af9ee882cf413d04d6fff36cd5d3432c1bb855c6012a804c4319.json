{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { ReactiveFormsModule, Validators } from \"@angular/forms\";\nimport { MatFormField, MatFormFieldModule, MatLabel } from \"@angular/material/form-field\";\nimport { MatInput } from \"@angular/material/input\";\nimport { MatDatepicker, MatDatepickerInput, MatDatepickerToggle } from \"@angular/material/datepicker\";\nimport { MatNativeDateModule } from \"@angular/material/core\";\nimport { provideMomentDateAdapter } from \"@angular/material-moment-adapter\";\nimport * as moment from 'moment';\nimport { MatButton } from \"@angular/material/button\";\nimport { catchError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/flight/flight.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/material/form-field\";\nfunction BrowserFormComponent_Conditional_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BrowserFormComponent_Conditional_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BrowserFormComponent_Conditional_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BrowserFormComponent_Conditional_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BrowserFormComponent_Conditional_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Minimal number of passengers is 1.\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'yyyy-MM-dd'\n  },\n  display: {\n    dateInput: 'yyyy-MM-DD',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY'\n  }\n};\nexport class BrowserFormComponent {\n  constructor(fb, fs, sb) {\n    this.fb = fb;\n    this.fs = fs;\n    this.sb = sb;\n    this.flightsSender = new EventEmitter();\n    this.locationsSender = new EventEmitter();\n    this.submitStatus = new EventEmitter();\n    this.locations = [];\n    this.minDate = new Date();\n    this.minReturnDate = new Date();\n    this.flightForm = this.fb.group({\n      origin: ['', Validators.required],\n      destination: ['', Validators.required],\n      adults: [1, [Validators.required, Validators.min(1), Validators.max(10)]],\n      dateOfDeparture: [this.minDate, [Validators.required, this.dateValidator()]],\n      dateOfReturn: ''\n    });\n  }\n  onSubmit(formDirective) {\n    const originValue = this.flightForm.get('origin').value;\n    const destination = this.flightForm.get('destination').value;\n    const returnDate = this.flightForm.get('dateOfReturn');\n    this.setFormattedData('dateOfDeparture');\n    returnDate?.value !== '' ? this.setFormattedData('dateOfReturn') : returnDate?.setValue('');\n    if (originValue && destination && this.flightForm.valid) {\n      this.flightsSender.emit([]);\n      this.flightForm.valid ? this.submitStatus.emit(true) : this.submitStatus.emit(false);\n      this.locations[0] = originValue;\n      this.locations[1] = destination;\n      this.locationsSender.emit(this.locations);\n      this.fs.searchCodeForCity(originValue).subscribe(res => {\n        this.flightForm.get('origin')?.setValue(res.data[0].address.cityCode);\n        this.fs.searchCodeForCity(destination).subscribe(res => {\n          this.flightForm.get('destination')?.setValue(res.data[0].address.cityCode);\n          this.fs.showAvailableFlights(this.flightForm).pipe(catchError(e => {\n            console.log(e);\n            return this.sb.open('An error has occured.Please,try again.', '', {});\n          })).subscribe(res => {\n            this.availableFlights = res.data;\n            this.flightsSender.emit(this.availableFlights);\n            this.flightForm.reset({}, {\n              emitEvent: false\n            });\n            formDirective.resetForm();\n            returnDate?.setValue('');\n          });\n        });\n      });\n    }\n  }\n  onSetDepartureDate() {\n    const minDate = new Date(moment(this.flightForm.get('dateOfDeparture').value).format('YYYY-MM-DD'));\n    this.minReturnDate = new Date(minDate.setDate(minDate.getDate()));\n  }\n  setFormattedData(selector) {\n    const date = moment(this.flightForm.get(selector).value);\n    const formattedDate = date.format('YYYY-MM-DD');\n    return this.flightForm.get(selector)?.setValue(formattedDate);\n  }\n  dateValidator() {\n    return control => {\n      const value = control.value;\n      if (!value || value === 'Invalid date') {\n        return {\n          required: true\n        };\n      }\n      return null;\n    };\n  }\n  static #_ = this.ɵfac = function BrowserFormComponent_Factory(t) {\n    return new (t || BrowserFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.FlightService), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BrowserFormComponent,\n    selectors: [[\"app-browser-form\"]],\n    outputs: {\n      flightsSender: \"flightsSender\",\n      locationsSender: \"locationsSender\",\n      submitStatus: \"submitStatus\"\n    },\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([provideMomentDateAdapter(MY_FORMATS)]), i0.ɵɵStandaloneFeature],\n    decls: 38,\n    vars: 12,\n    consts: [[\"formDirective\", \"ngForm\"], [\"departurePicker\", \"\"], [\"returnPicker\", \"\"], [1, \"container\"], [3, \"submit\", \"formGroup\"], [1, \"example-full-width\"], [\"matInput\", \"\", \"formControlName\", \"origin\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"destination\"], [\"matInput\", \"\", \"formControlName\", \"dateOfDeparture\", 3, \"dateChange\", \"matDatepicker\", \"min\"], [\"matIconSuffix\", \"\", 3, \"for\"], [\"matInput\", \"\", \"formControlName\", \"dateOfReturn\", 3, \"matDatepicker\", \"min\"], [\"matInput\", \"\", \"formControlName\", \"adults\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"]],\n    template: function BrowserFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 3)(1, \"h1\");\n        i0.ɵɵtext(2, \"Flight Browser\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 4, 0);\n        i0.ɵɵlistener(\"submit\", function BrowserFormComponent_Template_form_submit_3_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const formDirective_r2 = i0.ɵɵreference(4);\n          return i0.ɵɵresetView(ctx.onSubmit(formDirective_r2));\n        });\n        i0.ɵɵelementStart(5, \"mat-form-field\", 5)(6, \"mat-label\");\n        i0.ɵɵtext(7, \"City of departure\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵtemplate(9, BrowserFormComponent_Conditional_9_Template, 2, 0, \"mat-error\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-form-field\")(11, \"mat-label\");\n        i0.ɵɵtext(12, \"City of arrival\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 7);\n        i0.ɵɵtemplate(14, BrowserFormComponent_Conditional_14_Template, 2, 0, \"mat-error\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mat-form-field\")(16, \"mat-label\");\n        i0.ɵɵtext(17, \"Departure Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"input\", 8);\n        i0.ɵɵlistener(\"dateChange\", function BrowserFormComponent_Template_input_dateChange_18_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onSetDepartureDate());\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, BrowserFormComponent_Conditional_19_Template, 2, 0, \"mat-error\");\n        i0.ɵɵelement(20, \"mat-datepicker-toggle\", 9)(21, \"mat-datepicker\", null, 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"mat-form-field\")(24, \"mat-label\");\n        i0.ɵɵtext(25, \"Date of return\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 10)(27, \"mat-datepicker-toggle\", 9)(28, \"mat-datepicker\", null, 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"mat-form-field\")(31, \"mat-label\");\n        i0.ɵɵtext(32, \"Number of passengers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"input\", 11);\n        i0.ɵɵtemplate(34, BrowserFormComponent_Conditional_34_Template, 2, 0, \"mat-error\")(35, BrowserFormComponent_Conditional_35_Template, 2, 0, \"mat-error\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"button\", 12);\n        i0.ɵɵtext(37, \"Search flight!\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        let tmp_4_0;\n        let tmp_5_0;\n        let tmp_8_0;\n        let tmp_13_0;\n        let tmp_14_0;\n        const departurePicker_r3 = i0.ɵɵreference(22);\n        const returnPicker_r4 = i0.ɵɵreference(29);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.flightForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵconditional(9, ((tmp_4_0 = ctx.flightForm.get(\"origin\")) == null ? null : tmp_4_0.errors == null ? null : tmp_4_0.errors[\"required\"]) ? 9 : -1);\n        i0.ɵɵadvance(5);\n        i0.ɵɵconditional(14, ((tmp_5_0 = ctx.flightForm.get(\"destination\")) == null ? null : tmp_5_0.errors == null ? null : tmp_5_0.errors[\"required\"]) ? 14 : -1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"matDatepicker\", departurePicker_r3)(\"min\", ctx.minDate);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(19, ((tmp_8_0 = ctx.flightForm.get(\"dateOfDeparture\")) == null ? null : tmp_8_0.errors == null ? null : tmp_8_0.errors[\"required\"]) ? 19 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"for\", departurePicker_r3);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"matDatepicker\", returnPicker_r4)(\"min\", ctx.minReturnDate);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"for\", returnPicker_r4);\n        i0.ɵɵadvance(7);\n        i0.ɵɵconditional(34, ((tmp_13_0 = ctx.flightForm.get(\"adults\")) == null ? null : tmp_13_0.errors == null ? null : tmp_13_0.errors[\"required\"]) ? 34 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(35, ((tmp_14_0 = ctx.flightForm.get(\"adults\")) == null ? null : tmp_14_0.errors == null ? null : tmp_14_0.errors[\"min\"]) ? 35 : -1);\n      }\n    },\n    dependencies: [ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, MatLabel, MatFormField, MatInput, MatDatepicker, MatFormFieldModule, i4.MatError, i4.MatSuffix, MatDatepickerInput, MatNativeDateModule, MatDatepickerToggle, MatButton],\n    styles: [\".container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  row-gap: 10vh;\\n  align-items: center;\\n}\\n\\nform[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n  column-gap: 5px;\\n}\\n\\nmat-form-field[_ngcontent-%COMP%] {\\n  min-height: 2.5rem;\\n  display: flex;\\n  justify-content: space-between;\\n  width: 13rem;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  min-height: 3.5rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9icm93c2VyLWZvcm0vYnJvd3Nlci1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0FBQ0Y7O0FBQ0E7RUFDRSxhQUFBO0VBQ0EsZUFBQTtFQUNBLHVCQUFBO0VBQ0EsZUFBQTtBQUVGOztBQUFBO0VBQ0Usa0JBQUE7RUFDQSxhQUFBO0VBQ0EsOEJBQUE7RUFDQSxZQUFBO0FBR0Y7O0FBREE7RUFDRSxrQkFBQTtBQUlGIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lcntcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgcm93LWdhcDogMTB2aDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbmZvcm17XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgY29sdW1uLWdhcDogNXB4O1xyXG59XHJcbm1hdC1mb3JtLWZpZWxke1xyXG4gIG1pbi1oZWlnaHQ6IDIuNXJlbTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICB3aWR0aDogMTNyZW07XHJcbn1cclxuYnV0dG9ue1xyXG4gIG1pbi1oZWlnaHQ6IDMuNXJlbTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","ReactiveFormsModule","Validators","MatFormField","MatFormFieldModule","MatLabel","MatInput","MatDatepicker","MatDatepickerInput","MatDatepickerToggle","MatNativeDateModule","provideMomentDateAdapter","moment","MatButton","catchError","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","MY_FORMATS","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","BrowserFormComponent","constructor","fb","fs","sb","flightsSender","locationsSender","submitStatus","locations","minDate","Date","minReturnDate","flightForm","group","origin","required","destination","adults","min","max","dateOfDeparture","dateValidator","dateOfReturn","onSubmit","formDirective","originValue","get","value","returnDate","setFormattedData","setValue","valid","emit","searchCodeForCity","subscribe","res","data","address","cityCode","showAvailableFlights","pipe","e","console","log","open","availableFlights","reset","emitEvent","resetForm","onSetDepartureDate","format","setDate","getDate","selector","date","formattedDate","control","_","ɵɵdirectiveInject","i1","FormBuilder","i2","FlightService","i3","MatSnackBar","_2","selectors","outputs","standalone","features","ɵɵProvidersFeature","ɵɵStandaloneFeature","decls","vars","consts","template","BrowserFormComponent_Template","rf","ctx","ɵɵlistener","BrowserFormComponent_Template_form_submit_3_listener","ɵɵrestoreView","_r1","formDirective_r2","ɵɵreference","ɵɵresetView","ɵɵelement","ɵɵtemplate","BrowserFormComponent_Conditional_9_Template","BrowserFormComponent_Conditional_14_Template","BrowserFormComponent_Template_input_dateChange_18_listener","BrowserFormComponent_Conditional_19_Template","BrowserFormComponent_Conditional_34_Template","BrowserFormComponent_Conditional_35_Template","ɵɵadvance","ɵɵproperty","ɵɵconditional","tmp_4_0","errors","tmp_5_0","departurePicker_r3","tmp_8_0","returnPicker_r4","tmp_13_0","tmp_14_0","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","i4","MatError","MatSuffix","styles"],"sources":["D:\\Projekty\\lot-flight-browser\\frontend\\src\\app\\components\\browser-form\\browser-form.component.ts","D:\\Projekty\\lot-flight-browser\\frontend\\src\\app\\components\\browser-form\\browser-form.component.html"],"sourcesContent":["import {Component, EventEmitter, Output} from '@angular/core';\nimport {AbstractControl, FormBuilder, FormGroup, ReactiveFormsModule, ValidatorFn, Validators} from \"@angular/forms\";\nimport {FlightService} from \"../../services/flight/flight.service\";\nimport {MatFormField, MatFormFieldModule, MatHint, MatLabel} from \"@angular/material/form-field\";\nimport {MatInput} from \"@angular/material/input\";\nimport {MatDatepicker, MatDatepickerInput, MatDatepickerToggle, MatStartDate} from \"@angular/material/datepicker\";\nimport {MatNativeDateModule} from \"@angular/material/core\";\nimport {provideMomentDateAdapter} from \"@angular/material-moment-adapter\";\nimport * as moment from 'moment';\nimport {MatButton} from \"@angular/material/button\";\nimport {catchError} from \"rxjs\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'yyyy-MM-dd',\n  },\n  display: {\n    dateInput: 'yyyy-MM-DD',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n@Component({\n  selector: 'app-browser-form',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    MatLabel,\n    MatFormField,\n    MatInput,\n    MatDatepicker,\n    MatFormFieldModule,\n    MatDatepickerInput,\n    MatNativeDateModule,\n    MatHint,\n    MatDatepickerToggle,\n    MatStartDate,\n    MatButton\n  ],\n  providers:[\n    provideMomentDateAdapter(MY_FORMATS)\n  ],\n  templateUrl: './browser-form.component.html',\n  styleUrls: ['./browser-form.component.scss']\n})\n\nexport class BrowserFormComponent {\n  @Output() flightsSender: EventEmitter<Array<any>> = new EventEmitter();\n  @Output() locationsSender: EventEmitter<string[]> = new EventEmitter();\n  @Output() submitStatus: EventEmitter<boolean> = new EventEmitter();\n  availableFlights!:Array<any>;\n  locations:string[] = [];\n  flightForm!: FormGroup;\n  minDate = new Date();\n  minReturnDate = new Date();\n  constructor(private fb: FormBuilder,\n              private fs: FlightService,\n              private sb: MatSnackBar) {\n    this.flightForm = this.fb.group({\n      origin: ['', Validators.required],\n      destination: ['', Validators.required],\n      adults: [1, [Validators.required,Validators.min(1),Validators.max(10)]],\n      dateOfDeparture: [this.minDate,[Validators.required,this.dateValidator()]],\n      dateOfReturn: '',\n    });\n  }\n\n  onSubmit(formDirective: { resetForm: () => void; }){\n    const originValue = this.flightForm.get('origin')!.value;\n    const destination = this.flightForm.get('destination')!.value;\n    const returnDate = this.flightForm.get('dateOfReturn');\n    this.setFormattedData('dateOfDeparture');\n    returnDate?.value !== '' ? this.setFormattedData('dateOfReturn'): returnDate?.setValue('');\n   if (originValue && destination && this.flightForm.valid){\n     this.flightsSender.emit([]);\n     this.flightForm.valid ? this.submitStatus.emit(true) : this.submitStatus.emit(false);\n     this.locations[0] = originValue;\n     this.locations[1] = destination;\n     this.locationsSender.emit(this.locations);\n     this.fs.searchCodeForCity(originValue).subscribe((res: any)=>{\n       this.flightForm.get('origin')?.setValue(res.data[0].address.cityCode)\n       this.fs.searchCodeForCity(destination).subscribe((res: any)=>{\n         this.flightForm.get('destination')?.setValue(res.data[0].address.cityCode)\n         this.fs.showAvailableFlights(this.flightForm).pipe(catchError((e)=>{\n           console.log(e);\n           return this.sb.open('An error has occured.Please,try again.','',{\n             \n           })\n         })).subscribe((res: any)=>{\n           this.availableFlights = res.data;\n           this.flightsSender.emit(this.availableFlights);\n           this.flightForm.reset({},{emitEvent: false});\n           formDirective.resetForm();\n           returnDate?.setValue('')\n         })\n       });\n     });\n   }\n  }\n\n  onSetDepartureDate() {\n    const minDate = new Date(moment(this.flightForm.get('dateOfDeparture')!.value).format('YYYY-MM-DD'));\n    this.minReturnDate = new Date(minDate.setDate(minDate.getDate()));\n  }\n\n\n  private setFormattedData(selector:string) {\n    const date: moment.Moment = moment(this.flightForm.get(selector)!.value);\n    const formattedDate: string = date.format('YYYY-MM-DD');\n    return this.flightForm.get(selector)?.setValue(formattedDate);\n  }\n   private dateValidator(): ValidatorFn {\n    return (control: AbstractControl): {[key: string]: any} | null => {\n      const value = control.value;\n      if (!value || value === 'Invalid date') {\n        return { required: true };\n      }\n      return null;\n    };\n  }\n}\n","<div class=\"container\">\n    <h1>Flight Browser</h1>\n    <form #formDirective=\"ngForm\" [formGroup]=\"flightForm\" (submit)=\"onSubmit(formDirective)\">\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>City of departure</mat-label>\n        <input matInput formControlName=\"origin\" >\n        @if(flightForm.get('origin')?.errors?.['required']){\n          <mat-error>This field is mandatory</mat-error>\n        }\n      </mat-form-field>\n        <mat-form-field >\n            <mat-label>City of arrival</mat-label>\n            <input matInput type=\"text\" formControlName=\"destination\">\n          @if(flightForm.get('destination')?.errors?.['required']){\n            <mat-error>This field is mandatory</mat-error>\n          }\n        </mat-form-field>\n        <mat-form-field>\n            <mat-label>Departure Date</mat-label>\n          <input matInput [matDatepicker]=\"departurePicker\" formControlName=\"dateOfDeparture\" [min]=\"minDate\" (dateChange)=\"onSetDepartureDate()\">\n          @if(flightForm.get('dateOfDeparture')?.errors?.['required']){\n            <mat-error>This field is mandatory</mat-error>\n          }\n          <mat-datepicker-toggle matIconSuffix [for]=\"departurePicker\"></mat-datepicker-toggle>\n          <mat-datepicker #departurePicker></mat-datepicker>\n        </mat-form-field>\n      <mat-form-field>\n        <mat-label>Date of return</mat-label>\n        <input matInput [matDatepicker]=\"returnPicker\" formControlName=\"dateOfReturn\" [min]=\"minReturnDate\">\n        <mat-datepicker-toggle matIconSuffix [for]=\"returnPicker\"></mat-datepicker-toggle>\n        <mat-datepicker #returnPicker></mat-datepicker>\n      </mat-form-field>\n        <mat-form-field>\n            <mat-label>Number of passengers</mat-label>\n            <input matInput formControlName=\"adults\">\n          @if(flightForm.get('adults')?.errors?.['required']){\n            <mat-error>This field is mandatory</mat-error>\n          }\n          @if(flightForm.get('adults')?.errors?.['min']){\n            <mat-error>Minimal number of passengers is 1.</mat-error>\n          }\n        </mat-form-field>\n        <button mat-flat-button color=\"primary\" type=\"submit\">Search flight!</button>\n    </form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}