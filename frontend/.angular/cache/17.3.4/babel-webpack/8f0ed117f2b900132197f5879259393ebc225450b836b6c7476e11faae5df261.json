{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { HttpParams } from \"@angular/common/http\";\nimport { API_URL } from \"../../API_URL\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FlightService {\n  constructor(http) {\n    this.http = http;\n    this.flightsSender = new EventEmitter();\n  }\n  searchCodeForCity(code) {\n    return this.http.get(API_URL + '/city-and-airport-search/' + code);\n  }\n  showAvailableFlights(form) {\n    let params = new HttpParams();\n    params = params.append('originCode', form.get('origin')?.value);\n    params = params.append('destinationCode', form.get('destination')?.value);\n    params = params.append('dateOfDeparture', form.get('dateOfDeparture')?.value);\n    if (form.get('dateOfReturn')?.value !== '') {\n      params = params.append('dateOfReturn', form.get('dateOfReturn')?.value);\n    }\n    params = params.append('adults', form.get('adults')?.value);\n    params = params.append('max', 7);\n    return this.http.get(API_URL + '/flight-search', {\n      params: params\n    });\n  }\n  static #_ = this.ɵfac = function FlightService_Factory(t) {\n    return new (t || FlightService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FlightService,\n    factory: FlightService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["EventEmitter","HttpParams","API_URL","FlightService","constructor","http","flightsSender","searchCodeForCity","code","get","showAvailableFlights","form","params","append","value","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Projekty\\lot-flight-browser\\frontend\\src\\app\\services\\flight\\flight.service.ts"],"sourcesContent":["import {EventEmitter, Injectable, Output} from '@angular/core';\nimport {HttpClient, HttpParams} from \"@angular/common/http\";\nimport {API_URL} from \"../../API_URL\";\nimport {FormGroup} from \"@angular/forms\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlightService {\n  @Output() flightsSender: EventEmitter<<Array<any>> = new EventEmitter();\n  availableFlights!:Array<any>;\n  constructor(private http: HttpClient) { }\n\n  searchCodeForCity(code: string){\n    return this.http.get(API_URL+'/city-and-airport-search/'+code)\n  }\n\n  showAvailableFlights(form: FormGroup){\n    let params = new HttpParams();\n    params = params.append('originCode',form.get('origin')?.value);\n    params = params.append('destinationCode',form.get('destination')?.value);\n    params = params.append('dateOfDeparture',form.get('dateOfDeparture')?.value);\n    if(form.get('dateOfReturn')?.value !== ''){\n      params = params.append('dateOfReturn',form.get('dateOfReturn')?.value);\n\n    }\n    params = params.append('adults',form.get('adults')?.value);\n    params = params.append('max',7);\n    return this.http.get(API_URL+'/flight-search',{\n      params: params\n    });\n  }\n}\n"],"mappings":"AAAA,SAAQA,YAAY,QAA2B,eAAe;AAC9D,SAAoBC,UAAU,QAAO,sBAAsB;AAC3D,SAAQC,OAAO,QAAO,eAAe;;;AAMrC,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFd,KAAAC,aAAa,GAA8B,IAAIN,YAAY,EAAE;EAE/B;EAExCO,iBAAiBA,CAACC,IAAY;IAC5B,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAACP,OAAO,GAAC,2BAA2B,GAACM,IAAI,CAAC;EAChE;EAEAE,oBAAoBA,CAACC,IAAe;IAClC,IAAIC,MAAM,GAAG,IAAIX,UAAU,EAAE;IAC7BW,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,YAAY,EAACF,IAAI,CAACF,GAAG,CAAC,QAAQ,CAAC,EAAEK,KAAK,CAAC;IAC9DF,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,iBAAiB,EAACF,IAAI,CAACF,GAAG,CAAC,aAAa,CAAC,EAAEK,KAAK,CAAC;IACxEF,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,iBAAiB,EAACF,IAAI,CAACF,GAAG,CAAC,iBAAiB,CAAC,EAAEK,KAAK,CAAC;IAC5E,IAAGH,IAAI,CAACF,GAAG,CAAC,cAAc,CAAC,EAAEK,KAAK,KAAK,EAAE,EAAC;MACxCF,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,cAAc,EAACF,IAAI,CAACF,GAAG,CAAC,cAAc,CAAC,EAAEK,KAAK,CAAC;IAExE;IACAF,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,QAAQ,EAACF,IAAI,CAACF,GAAG,CAAC,QAAQ,CAAC,EAAEK,KAAK,CAAC;IAC1DF,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC;IAC/B,OAAO,IAAI,CAACR,IAAI,CAACI,GAAG,CAACP,OAAO,GAAC,gBAAgB,EAAC;MAC5CU,MAAM,EAAEA;KACT,CAAC;EACJ;EAAC,QAAAG,CAAA,G;qBAvBUZ,aAAa,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbjB,aAAa;IAAAkB,OAAA,EAAblB,aAAa,CAAAmB,IAAA;IAAAC,UAAA,EAFZ;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}